# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "container_push")
load("//bazel:images.bzl", "generate_vizier_metadata_persist_yamls", "generate_vizier_yamls", "image_map_with_bundle_version")

package(default_visibility = ["//visibility:public"])

VIZIER_IMAGE_MAP = {
    "gcr.io/pixie-oss/pixie-dev/vizier/cert_provisioner_image": "//src/utils/cert_provisioner:cert_provisioner_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/cloud_connector_server_image": "//src/vizier/services/cloud_connector:cloud_connector_server_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/kelvin_image": "//src/vizier/services/agent/kelvin:kelvin_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/metadata_server_image": "//src/vizier/services/metadata:metadata_server_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/pem_image": "//src/vizier/services/agent/pem:pem_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/query_broker_server_image": "//src/vizier/services/query_broker:query_broker_server_image",
    "gcr.io/pixie-oss/pixie-dev/vizier/vizier_updater_image": "//src/utils/pixie_updater:vizier_updater_image",
}

public_image_replacement = {"gcr.io/pixie-oss/pixie-dev/vizier/": "ventsislavg/pixie_vizier_"}

dev_image_replacement = {"gcr.io/pixie-oss/pixie-dev": "$(DEV_VIZIER_IMAGE_PREFIX)"}

generate_vizier_yamls(
    name = "public_vizier_etcd_metadata_prod",
    srcs = glob(["**/*.yaml"]),
    out = "public_vizier_etcd_metadata_prod.yaml",
    image_map = VIZIER_IMAGE_MAP,
    replace = public_image_replacement,
)

generate_vizier_yamls(
    name = "private_vizier_etcd_metadata_prod",
    srcs = glob(["**/*.yaml"]),
    out = "private_vizier_etcd_metadata_prod.yaml",
    image_map = VIZIER_IMAGE_MAP,
    replace = {},
)

generate_vizier_yamls(
    name = "vizier_etcd_metadata_dev",
    srcs = glob(["**/*.yaml"]),
    out = "vizier_etcd_metadata_dev.yaml",
    image_map = VIZIER_IMAGE_MAP,
    replace = dev_image_replacement,
)

generate_vizier_metadata_persist_yamls(
    name = "public_vizier_metadata_persist_prod",
    srcs = glob(["**/*.yaml"]),
    out = "public_vizier_metadata_persist_prod.yaml",
    image_map = VIZIER_IMAGE_MAP,
    replace = public_image_replacement,
)

generate_vizier_metadata_persist_yamls(
    name = "private_vizier_metadata_persist_prod",
    srcs = glob(["**/*.yaml"]),
    out = "private_vizier_metadata_persist_prod.yaml",
    image_map = VIZIER_IMAGE_MAP,
    replace = {},
)

generate_vizier_metadata_persist_yamls(
    name = "vizier_metadata_persist_dev",
    srcs = glob(["**/*.yaml"]),
    out = "vizier_metadata_persist_dev.yaml",
    image_map = VIZIER_IMAGE_MAP,
    replace = dev_image_replacement,
)

container_bundle(
    name = "private_vizier_images_bundle",
    images = image_map_with_bundle_version(
        image_map = VIZIER_IMAGE_MAP,
        replace = {},
    ),
)

container_bundle(
    name = "public_vizier_images_bundle",
    images = image_map_with_bundle_version(
        image_map = VIZIER_IMAGE_MAP,
        replace = public_image_replacement,
    ),
)

container_bundle(
    name = "dev_vizier_images_bundle",
    images = image_map_with_bundle_version(
        image_map = VIZIER_IMAGE_MAP,
        replace = dev_image_replacement,
    ),
)

container_push(
    name = "vizier_images_push",
    bundle = select({
        ":dev": ":dev_vizier_images_bundle",
        ":public": ":public_vizier_images_bundle",
        "//conditions:default": ":private_vizier_images_bundle",
    }),
    format = "Docker",
)

bool_flag(
    name = "use_dev_vizier_images",
    build_setting_default = False,
)

config_setting(
    name = "dev",
    flag_values = {":use_dev_vizier_images": "True"},
)

config_setting(
    name = "public",
    values = {"define": "public=True"},
)

genrule(
    name = "vizier_etcd_image_list",
    srcs = select({
        ":dev": [
            "//k8s/vizier:vizier_etcd_metadata_dev.yaml",
        ],
        ":public": [
            "//k8s/vizier:public_vizier_etcd_metadata_prod.yaml",
        ],
        "//conditions:default": [
            "//k8s/vizier:private_vizier_etcd_metadata_prod.yaml",
        ],
    }) + [
        "//k8s/vizier_deps:nats_prod",
        "//k8s/vizier_deps:etcd_prod",
    ],
    outs = ["vizier_etcd_image_list.txt"],
    cmd = """
      T=`mktemp -d`
      for FILE in $(SRCS); do cat $$FILE |  yq e '.. | .image? | select(.)' -o=json - | jq 'strings' | sort | uniq >> $@; done
      touch $@
    """,
)

genrule(
    name = "vizier_image_list",
    srcs = select({
        ":dev": [
            "//k8s/vizier:vizier_metadata_persist_dev.yaml",
        ],
        ":public": [
            "//k8s/vizier:public_vizier_metadata_persist_prod.yaml",
        ],
        "//conditions:default": [
            "//k8s/vizier:private_vizier_metadata_persist_prod.yaml",
        ],
    }) + [
        "//k8s/vizier_deps:nats_prod",
    ],
    outs = ["vizier_image_list.txt"],
    cmd = """
      T=`mktemp -d`
      for FILE in $(SRCS); do cat $$FILE |  yq e '.. | .image? | select(.)' -o=json - | jq 'strings' | sort | uniq >> $@; done
      touch $@
    """,
)

pkg_tar(
    name = "vizier_yamls",
    srcs =
        select({
            ":dev": [
                "//k8s/vizier:vizier_etcd_metadata_dev.yaml",
                "//k8s/vizier:vizier_metadata_persist_dev.yaml",
            ],
            ":public": [
                "//k8s/vizier:public_vizier_etcd_metadata_prod.yaml",
                "//k8s/vizier:public_vizier_metadata_persist_prod.yaml",
            ],
            "//conditions:default": [
                "//k8s/vizier:private_vizier_etcd_metadata_prod.yaml",
                "//k8s/vizier:private_vizier_metadata_persist_prod.yaml",
            ],
        }) + [
            "//k8s/vizier_deps:nats_prod",
            "//k8s/vizier_deps:etcd_prod",
            "//k8s/vizier:vizier_etcd_image_list",
            "//k8s/vizier:vizier_image_list",
            "public/secrets.yaml",
        ],
    package_dir = "/yamls",
    remap_paths = {
        "/vizier/private_vizier_etcd_metadata_prod.yaml": "vizier/vizier_etcd_metadata_prod.yaml",
        "/vizier/private_vizier_metadata_persist_prod.yaml": "vizier/vizier_metadata_persist_prod.yaml",
        "/vizier/public/secrets.yaml": "vizier/secrets.yaml",
        "/vizier/public_vizier_etcd_metadata_prod.yaml": "vizier/vizier_etcd_metadata_prod.yaml",
        "/vizier/public_vizier_metadata_persist_prod.yaml": "vizier/vizier_metadata_persist_prod.yaml",
        "/vizier/vizier_etcd_image_list.txt": "images/vizier_etcd_image_list.txt",
        "/vizier/vizier_etcd_metadata_dev.yaml": "vizier/vizier_etcd_metadata_prod.yaml",
        "/vizier/vizier_image_list.txt": "images/vizier_image_list.txt",
        "/vizier/vizier_metadata_persist_dev.yaml": "vizier/vizier_metadata_persist_prod.yaml",
    },
    strip_prefix = "/k8s",
)
